{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { InboxOutlined, ExclamationCircleFilled } from '@ant-design/icons';\nconst {\n  Header\n} = _Layout;\nimport { useState } from 'react';\nimport TableData from \"../components/TableData\";\nimport styled from \"styled-components\";\nimport axios from 'axios';\n\nconst csvToArray = text => {\n  let row = [],\n      c = 0,\n      i = 0,\n      ans = '',\n      res = [];\n\n  for (let d of text) {\n    if (d === ',' && !c) {\n      row.push(ans);\n      ans = d = '';\n    } else if (d === '\"') {\n      if (!c) c = 1;else c = 0;\n      d = '';\n    } else if ((++i === text.length || '\\n' === d || '\\r' === d) && !c && row.length) {\n      row.push(ans);\n      res.push(row);\n      d = ans = '';\n      row = [];\n      c = 0;\n    }\n\n    ans += d;\n  }\n\n  res.push(row);\n  return res;\n};\n\nconst Home = () => {\n  let title = `Bulk Upload form`;\n  let {\n    0: dataPost,\n    1: setDataPost\n  } = useState([]);\n  const {\n    0: amountSuccess,\n    1: setASuccess\n  } = useState();\n  const {\n    0: dataInvalid,\n    1: setDataInvalid\n  } = useState(\"\");\n\n  const ConvertData = async csv => {\n    let dataArray = await csvToArray(csv);\n    let headers = dataArray[0];\n    const result = dataArray.slice(1).reduce((o, row, i) => {\n      const fields = row;\n      let mapData = {\n        amenity: [],\n        status: []\n      };\n      headers.map((name, j) => {\n        if (['agent_post', 'accept_agent'].includes(name)) {\n          if (fields[j] === \"TRUE\") {\n            mapData.status.push(name);\n          }\n        } else if (j < 13) {\n          mapData[name] = fields[j] || \"not found\";\n          if (!fields[j] && !mapData.id.match('error')) mapData.id += 'error';\n        } else {\n          if (fields[j]) {\n            mapData.amenity.push(name);\n          }\n        }\n      });\n      o.push(mapData);\n      return o;\n    }, []);\n    const success = result.filter(e => {\n      var _e$id;\n\n      return !((_e$id = e.id) === null || _e$id === void 0 ? void 0 : _e$id.match('error'));\n    });\n    setASuccess((success === null || success === void 0 ? void 0 : success.length) || 0);\n    setDataPost(result);\n    if ((success === null || success === void 0 ? void 0 : success.length) !== result.length) setDataInvalid(\"You havenâ€™t upload any bulk data yet\");else setDataInvalid(\"\");\n  };\n\n  const onEditPhoto = async (event, id) => {\n    let formData = new FormData();\n    const file = event.target.files[0];\n    formData.append('photo1', file);\n    const newImg = await axios.post(\"/upload\", formData, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      return res === null || res === void 0 ? void 0 : res.data;\n    });\n    dataPost = await dataPost.map(e => {\n      if (e.id == id) {\n        e.photo1 = newImg;\n      }\n\n      return e;\n    });\n    setDataPost(dataPost);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(HeaderSyle, null, __jsx(Logo, {\n    src: \"/icons/logo.png\"\n  })), __jsx(Box, {\n    title: __jsx(React.Fragment, null, __jsx(\"h2\", null, title, \" \", dataInvalid ? __jsx(ExclamationCircleFilled, {\n      style: {\n        fontSize: '20px',\n        color: \"#0089FF\"\n      }\n    }) : \"\"), __jsx(\"p\", {\n      style: {\n        color: \"#0089FF\",\n        margin: 0\n      }\n    }, dataInvalid))\n  }, __jsx(\"h2\", null, \"Choose your an input medthod\"), __jsx(_Upload, {\n    accept: \".csv\",\n    showUploadList: false,\n    beforeUpload: file => {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        ConvertData(e.target.result);\n      };\n\n      reader.readAsText(file); // Prevent upload\n\n      return false;\n    }\n  }, __jsx(ButtonUpload, null, __jsx(\"img\", {\n    style: {\n      margin: \"auto 0\"\n    },\n    src: \"/icons/space_bar.png\"\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      margin: \"auto 0 auto 1vw\",\n      textAlign: \"start\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 800\n    }\n  }, \"via CSV file\"), __jsx(\"p\", null, \"\\u0E2D\\u0E31\\u0E1B\\u0E40\\u0E14\\u0E15\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E08\\u0E32\\u0E01\\u0E44\\u0E1F\\u0E25\\u0E4C CSV\")))))), dataPost.length ? __jsx(ContentStyle, null, __jsx(ResultUpload, null, __jsx(\"div\", {\n    className: \"box\"\n  }, __jsx(\"h2\", null, amountSuccess)), __jsx(\"h2\", {\n    className: \"list\"\n  }, \"listings successfully and Ready to published\"), __jsx(_Row, {\n    display: \"flex\",\n    justifycontent: \"flex-end\"\n  }, __jsx(\"div\", {\n    style: {\n      margin: \"auto\",\n      display: \"flex\"\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/update.png\"\n  }), \" \", __jsx(\"p\", {\n    className: \"update\"\n  }, \"Update data\")), __jsx(\"div\", {\n    style: {\n      margin: \"auto 2vw\"\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/open_in_browser.png\"\n  })), __jsx(\"div\", {\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: \"auto 1vw\",\n      color: \"#A6AAB4\"\n    }\n  }, \"Published\")))), __jsx(TableData, {\n    editPhoto: onEditPhoto,\n    rows: dataPost\n  })) : \"\");\n};\n\nexport default Home;\nconst ResultUpload = styled.div`\n  display: flex;\n  width: auto;\n  height: 88px;\n  left: 0px;\n  top: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n  div.box{\n    background: #F3F5F8;\n    height: 88px;\n    display: flex;\n  }\n  p.update{\n    color: #0089FF;\n    margin: auto 1vw;\n    line-height: 0;\n  }\n  h2{\n    margin: auto 2vw;\n  }\n  h2.list{\n    width: 70%;\n  }\n`;\nconst ButtonUpload = styled(_Button)`\n  width: 30vw;\n  height: 104px;\n  left: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n  display: flex;\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n`;\nconst ContentStyle = styled.div`\n  width: auto;\n  height: auto;\n  top: 0px;\n  margin: 2vw 0;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n`;\nconst Box = styled(_Card)`\n  max-width: 1019px;\n  height: 296px;\n  margin: auto;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n  .ant-card-body {\n    padding: 20px 24px;\n  }\n`;\nconst Container = styled.div`\n  min-height: 10vh;\n  margin-top: 120px;\n  padding: 0 20vw;\n`;\nconst HeaderSyle = styled(Header)`\n  width: 100%;\n  height: 56px;\n  background: #002240;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n`;\nconst Logo = styled.img`\n  position: absolute;\n  width: 90px;\n  height: 31.76px;\n  left: 20vw;\n  top: 12.18px;\n`;","map":null,"metadata":{},"sourceType":"module"}