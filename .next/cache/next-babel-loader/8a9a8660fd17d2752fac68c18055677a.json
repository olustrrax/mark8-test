{"ast":null,"code":"import \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst TableData = props => {\n  const {\n    0: rows,\n    1: setRows\n  } = useState(props === null || props === void 0 ? void 0 : props.rows);\n  useEffect(() => {\n    setRows(props === null || props === void 0 ? void 0 : props.rows);\n  }, [props === null || props === void 0 ? void 0 : props.rows]);\n  const columns = [{\n    dataIndex: 'id',\n    key: 'id',\n    width: 50,\n    align: 'center',\n    render: id => id.match('error') ? __jsx(BadgeError, null, __jsx(\"p\", null, id.replace('error', ''))) : id\n  }, {\n    title: 'CONDO NAME',\n    dataIndex: 'condo_name-EN',\n    key: 'condo_name-EN',\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'RENT PRICE (Baht)',\n    dataIndex: 'rent_price',\n    key: 'rent_price',\n    ellipsis: true,\n    render: rent_price => __jsx(React.Fragment, null, rent_price === 'not found' ? __jsx(TextNotfound, null, rent_price) : rent_price !== \"0\" ? __jsx(\"p\", {\n      style: {\n        margin: 0\n      }\n    }, \" \", rent_price, \" \", __jsx(MonthSpan, null, \"/month\")) : \"\")\n  }, {\n    title: 'SELL PRICE (Baht)',\n    dataIndex: 'sale_price',\n    key: 'sale_price',\n    ellipsis: true,\n    render: sale_price => __jsx(React.Fragment, null, sale_price !== \"0\" ? __jsx(\"p\", {\n      style: {\n        margin: 0\n      }\n    }, \" \", sale_price) : \"\")\n  }, {\n    title: 'BEDROOM',\n    dataIndex: 'bedroom',\n    key: 'bedroom',\n    width: 80,\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'BATHROOM',\n    dataIndex: 'bath',\n    key: 'bath',\n    width: 80,\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'SIZE (sqm.)',\n    dataIndex: 'size (sq.m)',\n    key: 'size (sq.m)',\n    width: 80,\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'FLOOR',\n    dataIndex: 'floor',\n    key: 'floor',\n    width: 80,\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'STATUS',\n    dataIndex: 'status',\n    key: 'status',\n    width: 200,\n    ellipsis: true,\n    render: status => __jsx(\"div\", {\n      style: {\n        display: \"flex\"\n      }\n    }, status.map((item, i) => __jsx(TagStyle, {\n      color: item === 'agent_post' ? \"rgba(111, 207, 151, 0.24)\" : \"rgba(243, 208, 83, 0.28)\",\n      key: i\n    }, __jsx(\"p\", {\n      style: {\n        color: item === 'agent_post' ? \"#6FCF97\" : \"#F2C94C\"\n      }\n    }, item === 'agent_post' ? \"Agent post\" : \"รับ Co Agent\"))))\n  }, {\n    title: 'PHOTO',\n    dataIndex: 'photo1',\n    ellipsis: true,\n    key: 'action',\n    render: (_, record) => __jsx(PreviewPhoto, null, __jsx(\"img\", {\n      src: record.photo1 || \"/icons/mockImage.png\"\n    }), __jsx(\"div\", {\n      className: \"inputFile\"\n    }, __jsx(\"input\", {\n      id: \"file\",\n      type: \"file\",\n      name: \"photo1\",\n      onChange: event => props.editPhoto(event, record.id),\n      accept: \"image/*\"\n    }), __jsx(\"a\", null, \"Edit photo\")))\n  }, {\n    title: 'TITLE',\n    dataIndex: 'title',\n    key: 'title',\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'DESCRIPTION',\n    dataIndex: 'description',\n    key: 'description',\n    ellipsis: true,\n    render: item => item === 'not found' ? __jsx(TextNotfound, null, item) : item\n  }, {\n    title: 'Amenities',\n    dataIndex: 'amenity',\n    key: 'amenity',\n    ellipsis: true,\n    width: 80,\n    render: amenity => __jsx(_Popover, {\n      placement: \"bottomRight\",\n      content: __jsx(\"div\", null, amenity.map(item => __jsx(\"p\", null, item))),\n      title: \"Amenities\",\n      trigger: \"hover\"\n    }, __jsx(\"div\", null, __jsx(\"p\", {\n      style: {\n        position: \"absolute\"\n      }\n    }, amenity.length), __jsx(CaretDownOutlined, {\n      style: {\n        margin: \"0.3vw 0 0 2vw\"\n      }\n    })))\n  }];\n  return __jsx(TableStyle, {\n    columns: columns,\n    size: \"small\",\n    dataSource: rows,\n    pagination: false,\n    scroll: {\n      x: \"calc(700px + 50%)\"\n    }\n  });\n};\n\nconst PreviewPhoto = styled.div`\n  img{\n    object-fit: cover;\n    width: 24px;\n    height: 24px;\n    border-radius: 6px;\n  }\n  .inputFile{\n    display: none;\n    position: relative;\n    width: auto;\n  }\n  .inputFile input{\n    width: 5vw;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n  }\n  img:hover + .inputFile, .inputFile:hover{\n    display: inline-block;\n    padding-left: 0.5vw;\n  }\n`;\nconst MonthSpan = styled.span`\n  color: #A6AAB4;\n`;\nconst TableStyle = styled(_Table)`\n  .ant-table thead th.ant-table-cell-ellipsis{\n    color: #A6AAB4;\n  }\n`;\nconst TagStyle = styled(_Tag)`\n  border-radius: 50px;\n  p{\n    font-size: 16px;\n    text-align: center;\n    margin: 0;\n  }\n`;\nconst BadgeError = styled.div`\n  background: #EB5757;\n  border-radius: 6px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  p{\n    margin: auto;\n    color: #FFFFFF;\n  }\n`;\nconst TextNotfound = styled.p`\n  color: #EB5757;\n  margin: 0;\n`;\nexport default TableData;","map":null,"metadata":{},"sourceType":"module"}