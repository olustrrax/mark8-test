{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { InboxOutlined, ExclamationCircleFilled } from '@ant-design/icons';\nconst {\n  Header\n} = _Layout;\nimport { useState } from 'react';\nimport TableData from \"../components/TableData\";\nimport styled from \"styled-components\";\nimport axios from 'axios';\n\nconst csvToArray = text => {\n  let row = [],\n      c = 0,\n      i = 0,\n      ans = '',\n      res = [];\n\n  for (let d of text) {\n    if (d === ',' && !c) {\n      row.push(ans);\n      ans = d = '';\n    } else if (d === '\"') {\n      if (!c) c = 1;else c = 0;\n      d = '';\n    } else if ((++i === text.length || '\\n' === d || '\\r' === d) && !c && row.length) {\n      row.push(ans);\n      res.push(row);\n      d = ans = '';\n      row = [];\n      c = 0;\n    }\n\n    ans += d;\n  }\n\n  res.push(row);\n  return res;\n};\n\nconst Home = () => {\n  let title = `Bulk Upload form`;\n  let {\n    0: dataPost,\n    1: setDataPost\n  } = useState([]);\n  const {\n    0: amountSuccess,\n    1: setASuccess\n  } = useState();\n  const {\n    0: dataInvalid,\n    1: setDataInvalid\n  } = useState(\"\");\n\n  const ConvertData = async csv => {\n    let dataArray = await csvToArray(csv);\n    let headers = dataArray[0];\n    const result = dataArray.slice(1).reduce((o, row, i) => {\n      const fields = row;\n      let mapData = {\n        amenity: [],\n        status: []\n      };\n      headers.map((name, j) => {\n        if (['agent_post', 'accept_agent'].includes(name)) {\n          if (fields[j] === \"TRUE\") {\n            mapData.status.push(name);\n          }\n        } else if (j < 13) {\n          mapData[name] = fields[j] || \"not found\";\n          if (!fields[j] && !mapData.id.match('error')) mapData.id += 'error';\n        } else {\n          if (fields[j]) {\n            mapData.amenity.push(name);\n          }\n        }\n      });\n      o.push(mapData);\n      return o;\n    }, []);\n    const success = result.filter(e => {\n      var _e$id;\n\n      return !((_e$id = e.id) === null || _e$id === void 0 ? void 0 : _e$id.match('error'));\n    });\n    setASuccess((success === null || success === void 0 ? void 0 : success.length) || 0);\n    setDataPost(result);\n    if ((success === null || success === void 0 ? void 0 : success.length) !== result.length) setDataInvalid(\"You haven’t upload any bulk data yet\");else setDataInvalid(\"\");\n  };\n\n  const onEditPhoto = async (event, id) => {\n    let formData = new FormData();\n    const file = event.target.files[0];\n    formData.append('photo1', file);\n    const newImg = await axios.post(\"/upload\", formData, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      return res === null || res === void 0 ? void 0 : res.data;\n    });\n    dataPost = await dataPost.map(e => {\n      if (e.id == id) {\n        e.photo1 = newImg;\n      }\n\n      return e;\n    });\n    setDataPost(dataPost);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(HeaderSyle, null, __jsx(Logo, {\n    src: \"/icons/logo.png\"\n  })), __jsx(Box, {\n    title: __jsx(React.Fragment, null, __jsx(\"h2\", null, title, \" \", dataInvalid ? __jsx(ExclamationCircleFilled, {\n      style: {\n        fontSize: '20px',\n        color: \"#0089FF\"\n      }\n    }) : \"\"), __jsx(\"p\", {\n      style: {\n        color: \"#0089FF\",\n        margin: 0\n      }\n    }, dataInvalid))\n  }, __jsx(\"h2\", null, \"Choose your an input medthod\"), __jsx(_Upload, {\n    accept: \".csv\",\n    showUploadList: false,\n    beforeUpload: file => {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        ConvertData(e.target.result);\n      };\n\n      reader.readAsText(file); // Prevent upload\n\n      return false;\n    }\n  }, __jsx(ButtonUpload, null, __jsx(\"img\", {\n    style: {\n      margin: \"auto 0\"\n    },\n    src: \"/icons/space_bar.png\"\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      margin: \"auto 0 auto 1vw\",\n      textAlign: \"start\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 800\n    }\n  }, \"via CSV file\"), __jsx(\"p\", null, \"\\u0E2D\\u0E31\\u0E1B\\u0E40\\u0E14\\u0E15\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E08\\u0E32\\u0E01\\u0E44\\u0E1F\\u0E25\\u0E4C CSV\")))))), dataPost.length ? __jsx(ContentStyle, null, __jsx(ResultUpload, null, __jsx(\"div\", {\n    className: \"box\"\n  }, __jsx(\"h2\", null, amountSuccess)), __jsx(\"h2\", {\n    className: \"list\"\n  }, \"listings successfully and Ready to published\"), __jsx(_Row, {\n    display: \"flex\",\n    justifycontent: \"flex-end\"\n  }, __jsx(\"div\", {\n    style: {\n      margin: \"auto\",\n      display: \"flex\"\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/update.png\"\n  }), \" \", __jsx(\"p\", {\n    className: \"update\"\n  }, \"Update data\")), __jsx(\"div\", {\n    style: {\n      margin: \"auto 2vw\"\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/open_in_browser.png\"\n  })), __jsx(\"div\", {\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      margin: \"auto 1vw\",\n      color: \"#A6AAB4\"\n    }\n  }, \"Published\")))), __jsx(TableData, {\n    editPhoto: onEditPhoto,\n    rows: dataPost\n  })) : \"\");\n};\n\nexport default Home;\nconst ResultUpload = styled.div`\n  display: flex;\n  width: auto;\n  height: 88px;\n  left: 0px;\n  top: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n  div.box{\n    background: #F3F5F8;\n    height: 88px;\n    display: flex;\n  }\n  p.update{\n    color: #0089FF;\n    margin: auto 1vw;\n    line-height: 0;\n  }\n  h2{\n    margin: auto 2vw;\n  }\n  h2.list{\n    width: 70%;\n  }\n`;\nconst ButtonUpload = styled(_Button)`\n  width: 30vw;\n  height: 104px;\n  left: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n  display: flex;\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n`;\nconst ContentStyle = styled.div`\n  width: auto;\n  height: auto;\n  top: 0px;\n  margin: 2vw 0;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n`;\nconst Box = styled(_Card)`\n  max-width: 1019px;\n  height: 296px;\n  margin: auto;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n  .ant-card-body {\n    padding: 20px 24px;\n  }\n`;\nconst Container = styled.div`\n  min-height: 10vh;\n  margin-top: 120px;\n  padding: 0 20vw;\n`;\nconst HeaderSyle = styled(Header)`\n  width: 100%;\n  height: 56px;\n  background: #002240;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n`;\nconst Logo = styled.img`\n  position: absolute;\n  width: 90px;\n  height: 31.76px;\n  left: 20vw;\n  top: 12.18px;\n`;","map":{"version":3,"sources":["/Users/mookky/Documents/app/mark8-test/pages/index.js"],"names":["React","InboxOutlined","ExclamationCircleFilled","Header","useState","TableData","styled","axios","csvToArray","text","row","c","i","ans","res","d","push","length","Home","title","dataPost","setDataPost","amountSuccess","setASuccess","dataInvalid","setDataInvalid","ConvertData","csv","dataArray","headers","result","slice","reduce","o","fields","mapData","amenity","status","map","name","j","includes","id","match","success","filter","e","onEditPhoto","event","formData","FormData","file","target","files","append","newImg","post","then","data","photo1","fontSize","color","margin","reader","FileReader","onload","readAsText","width","textAlign","fontWeight","display","ResultUpload","div","ButtonUpload","ContentStyle","Box","Container","HeaderSyle","Logo","img"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Layout, Card, Upload, Col, Button, Row } from \"antd\"\nimport { InboxOutlined,ExclamationCircleFilled } from '@ant-design/icons';\nconst { Header } = Layout\nimport { useState } from 'react'\nimport TableData from \"../components/TableData\"\nimport styled from \"styled-components\"\nimport axios from 'axios'\n\nconst csvToArray = (text) => {\n  let row = [], c = 0, i=0, ans = '', res = [];\n  for(let d of text){\n    if(d ===',' && !c){\n      row.push(ans)\n      ans = d = '';\n    }\n    else if(d==='\"'){\n      if(!c) c = 1; else c = 0;\n      d = '';\n    }\n    else if((++i === text.length || '\\n' === d || '\\r' === d ) && !c && row.length){\n      row.push(ans); res.push(row);\n      d = ans ='';\n      row = []; c = 0;\n    } \n    ans+=d;\n  }\n  res.push(row)\n  return res\n}\n\nconst Home = () => {\n  let title = `Bulk Upload form`\n  let [dataPost, setDataPost] = useState([])\n  const [amountSuccess, setASuccess] = useState()\n  const [dataInvalid, setDataInvalid] = useState(\"\")\n  const ConvertData = async (csv) => {\n    let dataArray = await csvToArray(csv);\n    let headers = dataArray[0]\n    const result = dataArray.slice(1).reduce((o, row, i) => {\n      const fields = row\n      let mapData = {\n        amenity: [],\n        status: [],\n      }\n      headers.map((name, j) => {\n        if(['agent_post','accept_agent'].includes(name)){\n          if(fields[j] === \"TRUE\"){\n            mapData.status.push(name)\n          }\n        }\n        else if(j < 13){\n          mapData[name] = fields[j] || \"not found\"\n          if(!fields[j] && !mapData.id.match('error')) mapData.id += 'error'\n        }\n        else{\n          if(fields[j]){\n            mapData.amenity.push(name)\n          }\n        }\n      })\n      o.push(mapData)\n      return o\n    },[])\n    const success = result.filter(e => !e.id?.match('error'))\n    setASuccess(success?.length || 0)\n    setDataPost(result)\n    if(success?.length !== result.length) setDataInvalid(\"You haven’t upload any bulk data yet\")\n    else setDataInvalid(\"\")\n  }\n\n  const onEditPhoto = async (event, id) => {\n    let formData = new FormData()\n    const file = event.target.files[0]\n    formData.append('photo1', file)\n    const newImg = await axios.post(\n      \"/upload\", \n      formData, \n      {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        }\n      }\n    )\n    .then((res) => {\n      return res?.data\n    })\n    dataPost = await dataPost.map((e) => { \n      if(e.id==id){ e.photo1 = newImg} \n      return e\n    })\n    setDataPost(dataPost)\n  }\n\n  return (\n    <>\n      <Container>\n        <HeaderSyle>\n          <Logo src=\"/icons/logo.png\" />\n        </HeaderSyle>\n        <Box title={\n          <>\n            <h2>{title} {dataInvalid? <ExclamationCircleFilled style={{ fontSize: '20px', color: \"#0089FF\"}} /> : \"\" }</h2>\n            <p style={{ color: \"#0089FF\", margin: 0}}>{dataInvalid}</p>\n          </>\n        }>\n          <h2>Choose your an input medthod</h2>\n          <Upload \n            accept=\".csv\"\n            showUploadList={false}\n            beforeUpload={file => {\n              const reader = new FileReader();\n              reader.onload = e => {\n                ConvertData(e.target.result)\n              };\n              reader.readAsText(file);\n              // Prevent upload\n              return false;\n            }}\n          >\n            <ButtonUpload>\n              <img style={{ margin: \"auto 0\"}} src=\"/icons/space_bar.png\"></img>\n              <div style={{ width: \"100%\", margin: \"auto 0 auto 1vw\", textAlign: \"start\"}}>\n                <p style={{ fontWeight: 800}} >via CSV file</p>\n                <p>\n                  อัปเดตข้อมูลจากไฟล์ CSV\n                </p>\n              </div>\n            </ButtonUpload>\n          </Upload>\n        </Box>\n      </Container>\n      {\n        dataPost.length ?\n        <ContentStyle>\n          <ResultUpload>\n            <div className=\"box\">\n              <h2>\n                {amountSuccess}\n              </h2>\n            </div>\n            <h2 className=\"list\">listings successfully and Ready to published</h2>\n            <Row display=\"flex\" justifycontent=\"flex-end\" >\n              <div style={{ margin: \"auto\", display: \"flex\"}} >\n                <img src=\"/icons/update.png\"/> <p className=\"update\">Update data</p>\n              </div>\n              <div style={{ margin: \"auto 2vw\"}}>\n                <img src=\"/icons/open_in_browser.png\" />\n              </div>\n              <div style={{ margin: \"auto\"}}>\n                <p style={{margin : \"auto 1vw\", color: \"#A6AAB4\"}}>Published</p>\n              </div>\n            </Row>\n          </ResultUpload>\n          <TableData\n            editPhoto={onEditPhoto}\n            rows={dataPost}\n          />\n        </ContentStyle>\n        : \"\"\n      }\n    </>\n  )\n}\n\nexport default Home\n\nconst ResultUpload = styled.div`\n  display: flex;\n  width: auto;\n  height: 88px;\n  left: 0px;\n  top: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n  div.box{\n    background: #F3F5F8;\n    height: 88px;\n    display: flex;\n  }\n  p.update{\n    color: #0089FF;\n    margin: auto 1vw;\n    line-height: 0;\n  }\n  h2{\n    margin: auto 2vw;\n  }\n  h2.list{\n    width: 70%;\n  }\n`\nconst ButtonUpload = styled(Button)`\n  width: 30vw;\n  height: 104px;\n  left: 0px;\n\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n  display: flex;\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n`\nconst ContentStyle = styled.div`\n  width: auto;\n  height: auto;\n  top: 0px;\n  margin: 2vw 0;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 0.5px solid #E5E5E5;\n  box-sizing: border-box;\n`\nconst Box = styled(Card)`\n  max-width: 1019px;\n  height: 296px;\n  margin: auto;\n  /* bg card */\n\n  background: #FFFFFF;\n  /* Border */\n\n  border: 1px solid #E5E5E5;\n  box-sizing: border-box;\n  border-radius: 6px;\n  .ant-card-body {\n    padding: 20px 24px;\n  }\n`\n\nconst Container = styled.div`\n  min-height: 10vh;\n  margin-top: 120px;\n  padding: 0 20vw;\n`\nconst HeaderSyle = styled(Header)`\n  width: 100%;\n  height: 56px;\n  background: #002240;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n`\n\nconst Logo = styled.img`\n  position: absolute;\n  width: 90px;\n  height: 31.76px;\n  left: 20vw;\n  top: 12.18px;\n`\n"]},"metadata":{},"sourceType":"module"}